---
- name: Deploy MRTG-WEB container
  vars:
    #pod_name: "{{ mrtgweb_pod_name }}.{{ inventory_hostname_short }}.mrtgweb_{{ mrtg.instance_name }}"
    web_container_name: "{{ inventory_hostname_short }}.mrtg_web_{{ mrtg.instance_name }}"
  block:

####################
# POD ist not working -> ports of container are not exposed
#
#    - name: Create pod for mrtg-web
#      containers.podman.podman_pod:
#        name: "{{ pod_name }}"
#        hostname: "{{ inventory_hostname_short }}.mrtgweb_{{ mrtg.instance_name }}"
#        state: "{{ state }}"
#        recreate: "{{ recreate }}"
#        network: "{{ mrtgweb_pod_network }}"
#      when: mrtgweb_pod_network != "bridge"
#    - name: Create pod for mrtg-web
#      containers.podman.podman_pod:
#        name: "{{ pod_name }}"
#        hostname: "{{ inventory_hostname_short }}.mrtgweb_{{ mrtg.instance_name }}"
#        state: "{{ state }}"
#        recreate: "{{ recreate }}"
#        network: "{{ mrtgweb_pod_network }}"
#        publish: "8080:8080"
#      when: mrtgweb_pod_network == "bridge"
#################################


    - name: Gather info about specific network
      containers.podman.podman_network_info:
        name: "{{ mrtg.web.network }}"
      register: network_result
      ignore_errors: True

    - name: Create network for mrtg-web only if not present
      containers.podman.podman_network:
        name: "{{ mrtg.web.network }}"
        state: "present"
        recreate: "no"
      when: network_result.failed

    - name: Run MRTG-WEB container
      podman_container:
        name: "{{ web_container_name }}"
        image: "{{ mrtg_web_image }}:{{ _mrtg_web_version }}"
        state: "{{ _mrtg_web_state }}"
        recreate: "{{ _mrtg_web_recreate }}"
        network: "{{ mrtg.web.network }}"
        publish: "8080:8080"
        label:
          process=mrtg-web
        memory: "{{ mrtg.web.memory_limit | default('1g') | human_to_bytes }}"
        memory_swap: "{{ mrtg.web.memory_limit | default('1g') | human_to_bytes * 2 }}"
        cpu_period: "{{ mrtg.web.cpu_limit | default('1') * 100000 }}"
        env:
          MRTG_DB_USER: "{{ mrtg.db.user }}"
          MRTG_DB_PASS: "{{ mrtg.db.password }}"
          MRTG_DB_NAME: "{{ mrtg.db.name }}"
          MRTG_DB_HOST: "{{ mrtg.db.host }}"
          KEYCLOAK_AUTH_SERVER_URL: "{{ mrtg.web.keycloak.url }}"
          KEYCLOAK_REALM: "{{ mrtg.web.keycloak.realm }}"
          KEYCLOAK_CLIENT: "{{ mrtg.web.keycloak.client }}"
          KEYCLOAK_CLIENT_SECRET: "{{ mrtg.web.keycloak.secret }}"
        volume:
          - "{{ mrtg_data }}/logs:/opt/mrtglogs:ro,z"
      register: result
      until: result is success
      retries: 3
      delay: 5

    - name: Hand over pod and container mgmt to systemd
      vars:
        container_name: "{{ web_container_name }}"
        type: container
      ansible.builtin.import_role:
        name: podman_systemd_simple
  
  when: mrtg.web.enabled | default(true) | bool
